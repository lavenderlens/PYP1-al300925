alanlavender@ALANs-MacBook-Pro PYP1-al300925 % python3
Python 3.13.1 (v3.13.1:06714517797, Dec  3 2024, 14:00:22) [Clang 15.0.0 (clang-1500.3.9.4)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
Cmd click to launch VS Code Native REPL
>>> True or True
True
>>> True or False
True
>>> False or True
True
>>> "Truthy value" or True
'Truthy value'
>>> "" or True
True
>>> "" or "Truthey"
'Truthey'
>>> exit()
alanlavender@ALANs-MacBook-Pro PYP1-al300925 % 
alanlavender@ALANs-MacBook-Pro PYP1-al300925 % python3
Python 3.13.1 (v3.13.1:06714517797, Dec  3 2024, 14:00:22) [Clang 15.0.0 (clang-1500.3.9.4)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
Cmd click to launch VS Code Native REPL
>>> 7 % 3
1
>>> 7 ** 3
343
>>> 7 // 3
2
>>> 7 + 3.5
10.5
>>> #7.0 + 3.5 promotion
>>> ["ho"] * 3
['ho', 'ho', 'ho']
>>> ["hee", haw"] * 3
  File "<stdin>", line 1
    ["hee", haw"] * 3
               ^
SyntaxError: unterminated string literal (detected at line 1)      ee", 
... 
... 
... 
... return 0
  File "<stdin>", line 5
    return 0
    ^^^^^^
SyntaxError: invalid syntax
>>> ["hee", "haw"] * 3
['hee', 'haw', 'hee', 'haw', 'hee', 'haw']
>>> "The meaning of life is " + 42
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    "The meaning of life is " + 42
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
TypeError: can only concatenate str (not "int") to str
>>> "The meaning of life is " + str(42)
'The meaning of life is 42'
>> not False
True
>>> not 2
False
>>> not ""
True
>>> not [1]
False
>>> 
>>> "a" > "b"
False
>>> [1,2,3] < [1,1,4]
False                                                           1 < [1,1,4]] 
  File "<stdin>", line 1
    1,2,3] < [1,1,4]
         ^
SyntaxError: unmatched ']'
>>> [1,2,3] < [1,3,4]
True
>>> [1,2,3] < [1,3,1]
True
>>> [1,2,3] < [1,2,1]
False
>>> #compares in PAIRS
>>> [1,2,3] <[1,3,3]
True
>>> [1,2,3] < [1,3,2]
True
>>> [1,2,3] < [1,3,0]
True
>>> #?
>>> {"a","b","c"}=={"b", "a", "c"}
True
>>> #sets are unordered                                                
>>> 
 *  History restored 

alanlavender@ALANs-MacBook-Pro PYP1-al300925 % 

Last login: Mon Sep 29 14:02:32 on ttys005
alanlavender@ALANs-MacBook-Pro ~ % python3
Python 3.13.1 (v3.13.1:06714517797, Dec  3 2024, 14:00:22) [Clang 15.0.0 (clang-1500.3.9.4)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> 3 == 3
True
>>> 3 is 3
<python-input-1>:1: SyntaxWarning: "is" with 'int' literal. Did you mean "=="?
  3 is 3
True
>>> id(3)
4325272224
>>> id(3)
4325272224
>>> #object identity
>>> #but warning says best not to use on immutable valu\
es BECAUSE their id() function will alwys return same a\
nyway
>>> [] == []
True
>>> [] is []
False
>>> "0" in "bobble"
False
>>> "o" in "bobble"
True
>>> 


Last login: Wed Oct  1 11:18:04 on ttys024
alanlavender@ALANs-MacBook-Pro ~ % python3
Python 3.13.1 (v3.13.1:06714517797, Dec  3 2024, 14:00:22) [Clang 15.0.0 (clang-1500.3.9.4)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> "john" in {"name":"john"}
False
>>> "name" in {"name":"john"}
True
>>> #the membership operator tests for dictionary KEYS, not values
>>> #dictionary keys are unique, values may be dupliacted
>>> True and bool(0)
False
>>> #for a truthy LHS and returns RHS
>>> bool([]) or bool("Hello")
True
>>> 

